######################################################################
# Automatically generated by qmake (3.0) Thu Jan 19 23:09:31 2017
######################################################################

QT       += core gui

greaterThan(QT_MAJOR_VERSION, 4): QT += widgets

CONFIG += c++11

TEMPLATE = lib

CONFIG(debug, debug|release) {
    TARGET = QtGraphd
}
CONFIG(release, debug|release) {
    TARGET = QtGraph
}

# BUILD should be automatically set to x86 or x86_64 unless passed in by user.
isEmpty(BUILD) {
    BUILD = $$QMAKE_HOST.arch
}

GRAPHVIZ_ROOT = $$(GRAPHVIZ_ROOT)

INCLUDEPATH += . private common

DEFINES          += QGRAPHVIZ_LIBRARY

INCLUDEPATH += $$GRAPHVIZ_ROOT/include/graphviz
LIBS += -L$$GRAPHVIZ_ROOT/lib -lcdt -lgvc -lcgraph

PUBLIC_HEADERS += \
           common/argonavis-lib-config.h \
           common/qtgraphlibrary.h \
           QGraphCanvas.h \
           QGraphEdge.h \
           QGraphNode.h

PRIVATE_HEADERS += \
           private/QGraphCanvasPrivate.h \
           private/QGraphEdgePrivate.h \
           private/QGraphNodePrivate.h

HEADERS += $$PUBLIC_HEADERS $$PRIVATE_HEADERS

SOURCES += QGraphCanvas.cpp \
           QGraphEdge.cpp \
           QGraphNode.cpp \
           private/QGraphCanvasPrivate.cpp \
           private/QGraphEdgePrivate.cpp \
           private/QGraphNodePrivate.cpp

contains(BUILD, x86_64) {
    target.path = $$(CBTF_ROOT)/lib64/$$QT_VERSION
}
else {
    target.path = $$(CBTF_ROOT)/lib/$$QT_VERSION
}

target_header.path = $$(CBTF_ROOT)/include/QtGraph
target_header.files = $$PUBLIC_HEADERS

INSTALLS += target_header target

DISTFILES += \
    README.md
